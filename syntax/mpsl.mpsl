sub mpsl_syn_token_list()
{
    local l = [];

    foreach (v, t, MPSL.CORE) {
        l->push(t);

        /* if this token is an object, iterate it */
        if (type(v) == "object") {
            foreach (sv, st, v)
                l->push(st);
        }
    }

    return l;
}

{
    id:         'mpsl',
    name:       'MPSL',
    filenames:  [ '/\.mpsl?$/i' ],
    defs:       [
        'word1', [
            mp.syn_token_list(
                [
                    'if', 'else', 'while', 'foreach', 'for',
                    'sub', 'break', 'return'
                ]
            ),
            mp.syn_token_list(mpsl_syn_token_list())
        ],
        'word2', [
            "/(NULL|local|global|this)/"
        ],
        'word3', [
            '/]/',
            '/[\.-=<>\?\+\*\/\!\%&\|\{\}\[]+/'
        ],
        'quotes', [
            "/\"([^\"\\\\\n\x{ad}]*((\\\\.|\x{ad}\n)[^\"\\\\\n]*)*)\"/",
            "/'([^'\\\\\n\x{ad}]*((\\\\.|\x{ad}\n)[^'\\\\\n]*)*)'/",
            "/\<-?[0-9]+\>/",                           /* numbers */
            "/\<0x[0-9a-f]+\>/i",                       /* hex numbers */
            "/\<0b[0-1]+\>/i",                          /* binary numbers */
            '/\w+\s*:/',                                /* JS-type hashes */
            "/\<[0-9[:upper:]_]+\>/"                    /* all-caps words */
        ],
        'word3', [
            '/[\\\{\}]/'
        ],
        'comments', [
            [ '|/\*|', '|\*/|' ],                       /* C-like */
            "/\/\/[^\n\x{ad}]*(\x{ad}\n[^\n]*)*/"       /* C++-like */
        ],
        'word3', [
            '/%-?[0-9]*[l]?[dxfsoic]/'
        ],
        'documentation', [
            [ "|/\*\*\n|", '|\*/|' ],                   /* mp_doccer */
            '/^/\*\*.*\*\*/$/m'                         /* section mark */
        ]
    ],
    section:    [ '/(^[A-Za-z_]|^\/\*\*.*\*\*\/$)/' ],
    'build_targets' => [
        'check %s',
        'execute %s'
    ],
    'complete_func' => sub (o, d) { d->complete(mpsl_syn_token_list()); return 1; }
};
